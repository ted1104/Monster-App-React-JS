{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.componenent.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonster","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAIaA,G,kBAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,YAChF,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,aCNjBC,EAAW,SAAAR,GAEpB,OACI,qBAAKC,UAAU,YAAf,SAMKD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OAAI,cAAC,EAAD,CAAuBA,QAAUA,GAAtBA,EAAQC,UCTjDO,G,MAAY,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,YAAYC,EAAiB,EAAjBA,aACpC,OACI,uBACIZ,UAAY,SACZa,KAAK,SACLF,YAAcA,EACdG,SAAWF,MCgERG,E,kDAnEb,aAAc,IAAD,8BACX,gBAgBFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAcF,EAAEG,OAAOC,SAhBvC,EAAKC,MAAQ,CACXb,SAAW,GACXU,YAAc,IAJL,E,gEAUO,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAET,SAAWkB,S,+BAQpC,MAE4BC,KAAKN,MAA/Bb,EAFF,EAEEA,SAAUU,EAFZ,EAEYA,YACZU,EAAkBpB,EAASqB,QAAQ,SAAA3B,GAAO,OAC9CA,EAAQG,KAAKyB,cAAcC,SAASb,EAAYY,kBAElD,OACE,sBAAK9B,UAAU,MAAf,UACE,8CACC,cAAC,EAAD,CACCW,YAAc,kBACdC,aAAiBe,KAAKf,eAEvB,cAAC,EAAD,CACCJ,SAAUoB,W,GApCFI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5ea7b283.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.styles.css'\r\n\r\n\r\nexport const Card = (props) =>{\r\n    return (\r\n        <div className=\"card-container\">\r\n            <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt=\"monster\"/>\r\n            <h2>{props.monster.name}</h2>\r\n            <p>{props.monster.email }</p>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport './card-list.styles.css'\r\nimport { Card } from './../card/card.component'\r\nexport const CardList = props => {\r\n    // console.log(props);\r\n    return (\r\n        <div className='card-list'>\r\n            {/* {props.children} */}\r\n            {/* <h2>{props.name}</h2> */}\r\n            {/* {props.monsters.map( monster => <h1 key={monster.id}>{monster.name}</h1>)} */}\r\n\r\n\r\n            {props.monsters.map(monster => <Card key={monster.id} monster={ monster }/>)}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport './search-box.styles.css'\r\n\r\nexport const SearchBox = ({ placeholder,handleChange })=>{\r\n    return (\r\n        <input \r\n            className = 'search'\r\n            type=\"search\" \r\n            placeholder= {placeholder}\r\n            onChange={ handleChange }\r\n        />\r\n    )\r\n}","import './App.css';\nimport { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component'\nimport { SearchBox } from './components/search-box/search-box.componenent'\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      monsters : [],\n      searchField : ''\n    }\n\n    // this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({ monsters : users}))\n    // console.log('Hey im mounting')\n  }\n\n  handleChange = (e) =>{\n    this.setState({ searchField : e.target.value })\n  }\n\n  render(){\n    // console.log('render')\n    const { monsters, searchField } = this.state;\n    const filteredMonster = monsters.filter( monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n      )\n    return (\n      <div className=\"App\">\n        <h1>MONSTER APPs</h1>\n         <SearchBox \n          placeholder = 'Search monsters'\n          handleChange = { this.handleChange }\n         />\n         <CardList\n          monsters={filteredMonster}/> \n\n         {/* <CardList name = \"teddy\">\n         { this.state.monsters.map(monster => <h1 key = {monster.id}> { monster.name} </h1>) }\n         </CardList> */}\n        \n      </div>\n    )\n  }\n}\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}